import { BarChart } from "@mui/x-charts/BarChart";
import { Box } from "@mui/material";


export default function ExploitGraph({data}) {
  if (!data) return null;

  const chartData = Object.entries(data).map(([exploitId, exploitData]) => {
    const [pending = 0, success = 0, fail = 0, expired = 0] = exploitData.status || [];
    const working = exploitData.is_working ?? false;
  
    return {
      label: exploitId,
      pending,
      success,
      fail,
      expired,
      working
    };
  });
  

  const xLabels = chartData.map((d) => d.label);

  // map of label -> working status
  const workingMap = {};
  chartData.forEach((entry) => {
    workingMap[entry.label] = entry.working;
  });

  return (
    <Box
      sx={{ p: 2, "& .MuiChartsLegend-root": { display: "none" } }}
      flexGrow={1}
    >
      <BarChart
        xAxis={[
          {
            scaleType: "band",
            data: xLabels,
            valueFormatter: (val) =>
              workingMap[val] ? `${val}` : `${val} ðŸ”´`,
          },
        ]}
        borderRadius={5}
        series={[
          {
            label: "Success",
            data: chartData.map((d) => d.success),
            color: "#00ff84",
          },
          {
            label: "Failure",
            data: chartData.map((d) => d.fail),
            color: "#ff5040",
          },
          {
            label: "Expired",
            data: chartData.map((d) => d.expired),
            color: "#ff9900",
          },
          {
            label: "Pending",
            data: chartData.map((d) => d.pending),
            color: "#00c3ff",
          },
        ]}
        height={300}
      />
    </Box>
  );
}
